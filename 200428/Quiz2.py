'''
[문제2 : JAVA독과 함께!]

첫 문제를 푼 라이캣은 자신의 한계가 어디인지 궁금했어요. 그렇지만 높은 곳은 혼자 갈 수 없죠. 그래서 동료를 모으기로 결심했습니다.

하지만 선뜻 멀고 험한길을 듣보잡 라이캣과 함께 해줄 친구들은 없었답니다.

라이캣은 랩처럼 대사를 외우고 다녔어요.

> 내 동료가 되어라냥!

- 뭐지? 명령문인가?
- '냥'이라니, 자연어처리가 힘들겠는걸?
- 동료는 sum인가, concat인가? axis 0인가, 1인가?

동물 친구들은 수근거렸습니다. 혼자 코딩하기 좋아하는 동물 친구들은 동료라는 말도 이해하지 못했어요.

---

그러던 중 동물 친구들 중에서 가장 재빠르고, 영리한 JAVA독이 말했습니다. ~~사실 자바독은 늘 Python을 해보고 싶었거든요.~~ 그래서 라이캣이 파이와 썬의 보물을 찾으러 가는 도구로 `파이썬`을 사용한다고 하였을 때 눈여겨 보고 있었어요.

> 내가 동료되길 원해? 그렇다면 검증필!?

라이캣은 거절할 이유가 없었죠.

> 좋아냥!

---

저기 징검다리가 보이지? 내 친구들이 징검다리를 건널거야! 하지만 징검다리는 버틸수 있는 내구도가 한계가 있지! 내 친구들의 **몸무게**, **돌의 내구도**, **친구들의 점프력**을 고려하여 내 친구 루비독, 피치피독, 씨-독, 코볼독이 각각 다리를 건널 수 있는지 알아봐줘! 친구들은 더 추가 될 수도, 덜 건널 수도 있어!

1. 각 돌들이 얼마나 버틸수 있는지 배열로 주어집니다.

2. 각 독들의 개인정보가 JSON(뜬금없지만, 문제니까 어쩔 수 없습니다. JSON은 큰 따옴표로 묶여야 합니다.)으로 주어집니다. 개인정보는 보호되지 않습니다.

3. 각 돌에 독들이 착지할 때 돌의 내구도는 몸무게만큼 줄어듭니다.
    ex) [1,2,1,4] 각 돌마다 몸무게 1인 독 1마리 2마리 1마리 4마리의 착지를 버틸 수 있습니다.

4. 독들의 점프력이 각자 다릅니다. 
    ex)[2,1] 첫번째 독은 2칸씩 두번째 독은 1칸씩 점프합니다.

4. 각 독들은 순서대로만 다리를 건넙니다.

**입력**
돌의내구도 = [1, 2, 1, 4]
독 = [{
    '이름' : '루비독',
    '나이' : '95년생',
    '점프력' : '3',
    '몸무게' : '4',
    },{
    '이름' : '피치독',
    '나이' : '95년생',
    '점프력' : '3',
    '몸무게' : '3',
    },{
    '이름' : '씨-독',
    '나이' : '72년생',
    '점프력' : '2',
    '몸무게' : '1',
    },{
    '이름' : '코볼독',
    '나이' : '59년생',
    '점프력' : '1',
    '몸무게' : '1',
    },
]

**출력**
생존자 : ['씨-독']

**입력**
돌의내구도 = [5, 3, 4, 1, 3, 8, 3]
독 = [{
    '이름' : '루비독',
    '나이' : '95년생',
    '점프력' : '3',
    '몸무게' : '4',
    },{
    '이름' : '피치독',
    '나이' : '95년생',
    '점프력' : '3',
    '몸무게' : '3',
    },{
    '이름' : '씨-독',
    '나이' : '72년생',
    '점프력' : '2',
    '몸무게' : '1',
    },{
    '이름' : '코볼독',
    '나이' : '59년생',
    '점프력' : '1',
    '몸무게' : '1',
    },
]

**출력**
생존자 : ['루비독', '씨-독']
'''
# Case1
import json
돌의내구도 = [1, 2, 1, 4]
독 = [{
    '이름': '루비독',
    '나이': '95년생',
    '점프력': '3',
    '몸무게': '4',
}, {
    '이름': '피치독',
    '나이': '95년생',
    '점프력': '3',
    '몸무게': '3',
}, {
    '이름': '씨-독',
    '나이': '72년생',
    '점프력': '2',
    '몸무게': '1',
}, {
    '이름': '코볼독',
    '나이': '59년생',
    '점프력': '1',
    '몸무게': '1',
},
]

# remove :: 0(N)
# del 0(1)
# google : python list big o


def 징검다리를건나라(돌의내구도, 독):
    answer = [i['이름'] for i in 독]
    for i in 독:
        독의위치 = 0

        while 독의위치 < len(돌의내구도) - 1:
            독의위치 += int(i['점프력'])
            돌의내구도[독의위치 - 1] -= int(i['몸무게'])
            # print(돌의내구도)

            if 돌의내구도[독의위치 - 1] < 0:
                answer[answer.index(i['이름'])] = 'fail'
                break

    return [i for i in answer if i != 'fail']


print(징검다리를건나라(돌의내구도, 독))


# Case2
돌의내구도 = [5, 3, 4, 1, 3, 8, 3]
독 = [{
    '이름': '루비독',
    '나이': '95년생',
    '점프력': '3',
    '몸무게': '4',
}, {
    '이름': '피치독',
    '나이': '95년생',
    '점프력': '3',
    '몸무게': '3',
}, {
    '이름': '씨-독',
    '나이': '72년생',
    '점프력': '2',
    '몸무게': '1',
}, {
    '이름': '코볼독',
    '나이': '59년생',
    '점프력': '1',
    '몸무게': '1',
},
]


def 징검다리를건나라2(돌의내구도, 독):
    answer = [i['이름'] for i in 독]
    for i in 독:
        독의위치 = 0

        while 독의위치 < len(돌의내구도) - 1:
            독의위치 += int(i['점프력'])
            돌의내구도[독의위치 - 1] -= int(i['몸무게'])
            # print(돌의내구도)

            if 돌의내구도[독의위치 - 1] < 0:
                del answer[answer.index(i['이름'])]
                break

    return answer


print(징검다리를건나라2(돌의내구도, 독))


# Case3
JSON독 = json.dumps(독, ensure_ascii=False)
print(JSON독[:10])
